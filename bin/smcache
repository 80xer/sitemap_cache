#!/usr/bin/env node
var argv = require('minimist')(process.argv.slice(2));
var chalk = require('chalk');
var Smcache = require('../lib/smcache');
var pkg = require('../package.json');

invoke({
  url: argv._[0],
  prefix: argv._[1]
})

function invoke(config) {
  if (argv.version) {
    console.info('v%s', pkg.version);
    exit(0);
  };

  if (!config.url) {
    console.error(chalk.red(' target url not found'));
    console.log(' eg: smcache http://www.lawtalk.co.kr prerender');
    console.log(' read https://github.com/80xer/sitemap_cache');
    exit(1);
  };

  if (!config.prefix) {
    console.error(chalk.red(' prefix not found'));
    console.log(' eg: smcache http://www.lawtalk.co.kr prerender');
    console.log(' read https://github.com/80xer/sitemap_cache');
    exit(1);
  };

  try {
    runSmCache(config);
  } catch (e) {
    console.log(e);
    console.error(chalk.red(e.message));
    exit(1);
  }
};

function runSmCache(config) {
  var smcache = new Smcache();
  smcache.cache(config);
}

function exit(code) {
  if (process.platform === 'win32' && process.stdout.bufferSize) {
    process.stdout.once('drain', function() {
      process.exit(code);
    });
    return;
  };
  process.exit(code);
}
